!function(e){"use strict";e.module("Simon",["ngRoute","Common","Projects","Applications"])}(angular),function(e){"use strict";function t(e){e.otherwise({redirectTo:"/"})}e.module("Simon").config(t),t.$inject=["$routeProvider"]}(angular),function(e){"use strict";e.module("Common",["ngRoute"])}(angular),function(e){"use strict";function t(e){e.when("/About",{templateUrl:"App/00_Common/03_Templates/About.html",controller:"About",controllerAs:"vm"}).when("/Settings",{templateUrl:"App/00_Common/03_Templates/Settings.html",controller:"Settings",controllerAs:"vm"})}e.module("Common").config(t),t.$inject=["$routeProvider"]}(angular),function(e){"use strict";e.module("Projects",["ngRoute","Common"])}(angular),function(e){"use strict";function t(e){e.when("/",{templateUrl:"App/01_Projects/03_Templates/Projects.html",controller:"Projects",controllerAs:"vm"}).when("/new-project",{templateUrl:"App/01_Projects/03_Templates/NewProject.html",controller:"NewProject",controllerAs:"vm"}).when("/:ProjectId",{templateUrl:"App/01_Projects/03_Templates/ProjectDetails.html",controller:"ProjectDetails",controllerAs:"vm"}).when("/:ProjectId/edit",{templateUrl:"App/01_Projects/03_Templates/EditProject.html",controller:"EditProject",controllerAs:"vm"})}e.module("Projects").config(t),t.$inject=["$routeProvider"]}(angular),function(e){"use strict";e.module("Applications",["ngRoute","Common","Projects"])}(angular),function(e){"use strict";function t(e){e.when("/:ProjectId/new-application",{templateUrl:"App/02_Applications/03_Templates/NewApplication.html",controller:"NewApplication",controllerAs:"vm"}).when("/:ProjectId/:ApplicationId",{templateUrl:"App/02_Applications/03_Templates/ApplicationDetails.html",controller:"ApplicationDetails",controllerAs:"vm"}).when("/:ProjectId/:ApplicationId/edit",{templateUrl:"App/02_Applications/03_Templates/EditApplication.html",controller:"EditApplication",controllerAs:"vm"})}e.module("Applications").config(t),t.$inject=["$routeProvider"]}(angular),function(e){"use strict";function t(){function e(e,t,o){(o.ngClick||""===o.href||"#"===o.href)&&t.on("click",function(e){e.preventDefault()})}return{restrict:"E",link:e}}e.module("Common").directive("a",t)}(angular),function(e){"use strict";function t(){var e=this;e.Title=""}e.module("Common").value("PageHeadService",new t)}(angular),function(e){"use strict";function t(){function t(){i.AboutMenu.Class="",i.SettingsMenu.Class=""}function n(t){t.get("/api/PluginPaths").success(function(t){i.Tools=e.fromJson(t)})}function r(t){t.get("/api/User").success(function(t){i.User=e.fromJson(t)})}var i=this;i.AboutMenu=new o("/About","About"),i.SettingsMenu=new o("/Settings","Settings"),i.Tools=void 0,i.User=void 0,i.DeactivateAll=t,i.LoadTools=n,i.LoadUser=r}function o(e,t){function o(){n.IsActive=!0,n.Class="active"}var n=this;n.IsActive=!1,n.Class="",n.Path=e,n.Text=t,n.SetAsActive=o}e.module("Common").value("NavbarService",new t)}(angular),function(e){"use strict";function t(){function e(){i.RootItem=void 0,i.IsVisible=!1}function t(){var e=[];return i.RootItem&&i.RootItem.AddTo(e),e}function n(e,t){i.IsVisible=!0,i.RootItem?(i.RootItem.Class="",i.RootItem.SetNextWith(e,t)):(i.RootItem=new o(e,t),i.RootItem.Class="active")}function r(){i.RootItem&&(i.RootItem.IsLast()?i.Reset():i.RootItem.RemoveLast())}var i=this;i.RootItem=void 0,i.IsVisible=!1,i.Reset=e,i.GetItems=t,i.AddNew=n,i.RemoveLast=r}function o(e,t){function n(e,t){s.Next?e?(s.Next.Class="",s.Next.SetNextWith(e,t)):s.Next.Next||(s.Class="active",s.Next=void 0):(s.Next=new o(e,t),s.Next.Class="active")}function r(e){e.push(s),s.Next&&s.Next.AddTo(e)}function i(){return!s.Next}function c(){s.Next&&(s.Next.IsLast()?(s.Class="active",s.Next=void 0):s.Next.RemoveLast())}var s=this;s.Location=e.path(),s.Text=t,s.Next=void 0,s.Class="",s.SetNextWith=n,s.AddTo=r,s.IsLast=i,s.RemoveLast=c}e.module("Common").value("BreadcrumbService",new t)}(angular),function(e){"use strict";function t(t,o,n){function r(){return t.get("/api/Settings").success(function(t){s.Settings=e.fromJson(t)}).error(function(e){s.Error=e})}function i(){return t.post("/api/Settings",s.Settings).success(function(){n.UpdateTools(t),o.path("/")}).error(function(e){s.Error=e})}function c(e){var t=s.Settings.indexOf(e);-1!=t&&s.Settings.splice(t,1)}var s=this;s.Settings=[],s.GetSettings=r,s.UpdateSettings=i,s.DeleteSettings=c}e.module("Common").service("SettingsService",t),t.$inject=["$http","$location","NavbarService"]}(angular),function(e){"use strict";function t(e){function t(){e.get("/api/SimonVersion/").success(function(e){o.Version=e.DisplayText})}var o=this;o.Version="",o.GetVersion=t}e.module("Common").service("SimonVersionService",t),t.$inject=["$http"]}(angular),function(e){"use strict";function t(t){function o(){return t.get("/api/Plugins").success(function(t){n.Plugins=e.fromJson(t)})}var n=this;n.Plugins=void 0,n.GetPlugins=o}e.module("Common").service("PluginsService",t),t.$inject=["$http"]}(angular),function(e){"use strict";function t(e){var t=this;t.PageHeadService=e}e.module("Common").controller("PageHead",t),t.$inject=["PageHeadService"]}(angular),function(e){"use strict";function t(e,t,o){function n(){t.LoadTools(e),t.LoadUser(e),o.GetVersion()}var r=this;r.NavbarService=t,r.SimonVersionService=o,n()}e.module("Common").controller("Navbar",t),t.$inject=["$http","NavbarService","SimonVersionService"]}(angular),function(e){"use strict";function t(e){var t=this;t.BreadcrumbService=e}e.module("Common").controller("Breadcrumb",t),t.$inject=["BreadcrumbService"]}(angular),function(e){"use strict";function t(e,t,o,n,r,i){function c(){try{t.Title="Global settings",o.IsVisible=!1,n.DeactivateAll(),n.SettingsMenu.SetAsActive(),r.GetSettings().error(function(e){s.Error=e}),i.GetPlugins().error(function(e){s.Error=e})}catch(e){console.log(e)}}var s=this;s.Error=void 0,s.PageHeadService=t,s.BreadcrumbService=o,s.NavbarService=n,s.SettingsService=r,s.PluginsService=i,c()}e.module("Common").controller("Settings",t),t.$inject=["$location","PageHeadService","BreadcrumbService","NavbarService","SettingsService","PluginsService"]}(angular),function(e){"use strict";function t(e,t,o,n){function r(){t.Title="About",o.IsVisible=!1,n.DeactivateAll(),n.AboutMenu.SetAsActive()}var i=this;i.PageHeadService=t,i.BreadcrumbService=o,i.NavbarService=n,r()}e.module("Common").controller("About",t),t.$inject=["$location","PageHeadService","BreadcrumbService","NavbarService"]}(angular),function(e){"use strict";function t(){function e(){}e()}e.module("Common").controller("Footer",t)}(angular),function(e){"use strict";function t(t,o,n){function r(){return t.get("/api/projects").success(function(t){a.Projects=e.fromJson(t)}).error(function(e){a.Error=e})}function i(o){return t.get("/api/projects/"+o).success(function(t){a.SelectedProject=e.fromJson(t)}).error(function(e){a.Error=e})}function c(e){return t.post("/api/projects/",e).success(function(e){n.RemoveLast(),o.path("/"+e.Id)}).error(function(e){a.Error=e})}function s(){return t.post("/api/projects/",a.SelectedProject).success(function(){n.RemoveLast(),o.path("/"+a.SelectedProject.Id)}).error(function(e){a.Error=e})}var a=this;a.Projects=[],a.Error=void 0,a.SelectedProject=void 0,a.GetProjects=r,a.GetProjectDetails=i,a.AddProject=c,a.UpdateProject=s}e.module("Projects").service("ProjectsService",t),t.$inject=["$http","$location","BreadcrumbService"]}(angular),function(e){"use strict";function t(e,t,o,n,r){function i(){t.Title="Home",o.DeactivateAll(),r.GetProjects().success(function(){n.Reset(),n.AddNew(e,t.Title)})}var c=this;c.ProjectsService=r,i()}e.module("Projects").controller("Projects",t),t.$inject=["$location","PageHeadService","NavbarService","BreadcrumbService","ProjectsService"]}(angular),function(e){"use strict";function t(e,t,o,n,r,i){function c(){o.Title="Add New Project",n.DeactivateAll(),r.AddNew(e,o.Title)}var s=this;s.ProjectsService=i,s.NewProjectDetails={Name:"",Description:""},c()}e.module("Projects").controller("NewProject",t),t.$inject=["$location","$routeParams","PageHeadService","NavbarService","BreadcrumbService","ProjectsService"]}(angular),function(e){"use strict";function t(e,t,o,n,r,i){function c(){n.DeactivateAll(),i.GetProjectDetails(t.ProjectId).success(function(){o.Title=i.SelectedProject.Name,r.AddNew(e,o.Title)})}var s=this;s.ProjectsService=i,c()}e.module("Projects").controller("ProjectDetails",t),t.$inject=["$location","$routeParams","PageHeadService","NavbarService","BreadcrumbService","ProjectsService"]}(angular),function(e){"use strict";function t(e,t,o,n,r,i){function c(){n.DeactivateAll(),i.GetProjectDetails(t.ProjectId).success(function(){o.Title="Edit "+i.SelectedProject.Name,r.RemoveLast(),r.AddNew(e,o.Title)})}var s=this;s.ProjectsService=i,c()}e.module("Projects").controller("EditProject",t),t.$inject=["$location","$routeParams","PageHeadService","NavbarService","BreadcrumbService","ProjectsService"]}(angular);
//# sourceMappingURL=data:application/json;base64,