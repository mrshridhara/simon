!function(e){"use strict";e.module("Simon",["ngRoute","Common","Projects","Applications"])}(angular),function(e){"use strict";function t(e){e.otherwise({redirectTo:"/"})}e.module("Simon").config(t),t.$inject=["$routeProvider"]}(angular),function(e){"use strict";e.module("Common",["ngRoute"])}(angular),function(e){"use strict";function t(e){e.when("/About",{templateUrl:"App/00_Common/03_Templates/About.html",controller:"About",controllerAs:"vm"}).when("/Settings",{templateUrl:"App/00_Common/03_Templates/Settings.html",controller:"Settings",controllerAs:"vm"})}e.module("Common").config(t),t.$inject=["$routeProvider"]}(angular),function(e){"use strict";e.module("Projects",["ngRoute","Common"])}(angular),function(e){"use strict";function t(e){e.when("/",{templateUrl:"App/01_Projects/03_Templates/Projects.html",controller:"Projects",controllerAs:"vm"}).when("/new-project",{templateUrl:"App/01_Projects/03_Templates/NewProject.html",controller:"NewProject",controllerAs:"vm"}).when("/:ProjectId",{templateUrl:"App/01_Projects/03_Templates/ProjectDetails.html",controller:"ProjectDetails",controllerAs:"vm"}).when("/:ProjectId/edit",{templateUrl:"App/01_Projects/03_Templates/EditProject.html",controller:"EditProject",controllerAs:"vm"})}e.module("Projects").config(t),t.$inject=["$routeProvider"]}(angular),function(e){"use strict";e.module("Applications",["ngRoute","Common","Projects"])}(angular),function(e){"use strict";function t(e,t,o,r,n){function c(){t.Title="Home",o.DeactivateAll(),n.GetProjects().success(function(){r.Reset(),r.AddNew(e,t.Title)})}var i=this;i.ProjectsService=n,c()}e.module("Projects").controller("Projects",t),t.$inject=["$location","PageHeadService","NavbarService","BreadcrumbService","ProjectsService"]}(angular),function(e){"use strict";function t(e,t,o,r,n,c){function i(){o.Title="Add New Project",r.DeactivateAll(),n.AddNew(e,o.Title)}var s=this;s.ProjectsService=c,s.NewProjectDetails={Name:"",Description:""},i()}e.module("Projects").controller("NewProject",t),t.$inject=["$location","$routeParams","PageHeadService","NavbarService","BreadcrumbService","ProjectsService"]}(angular),function(e){"use strict";function t(e,t,o,r,n,c){function i(){r.DeactivateAll(),c.GetProjectDetails(t.ProjectId).success(function(){o.Title=c.SelectedProject.Name,n.AddNew(e,o.Title)})}var s=this;s.ProjectsService=c,i()}e.module("Projects").controller("ProjectDetails",t),t.$inject=["$location","$routeParams","PageHeadService","NavbarService","BreadcrumbService","ProjectsService"]}(angular),function(e){"use strict";function t(e,t,o,r,n,c){function i(){r.DeactivateAll(),c.GetProjectDetails(t.ProjectId).success(function(){o.Title="Edit "+c.SelectedProject.Name,n.RemoveLast(),n.AddNew(e,o.Title)})}var s=this;s.ProjectsService=c,i()}e.module("Projects").controller("EditProject",t),t.$inject=["$location","$routeParams","PageHeadService","NavbarService","BreadcrumbService","ProjectsService"]}(angular),function(e){"use strict";function t(t,o,r){function n(){return t.get("/api/projects").success(function(t){a.Projects=e.fromJson(t)}).error(function(e){a.Error=e})}function c(o){return t.get("/api/projects/"+o).success(function(t){a.SelectedProject=e.fromJson(t)}).error(function(e){a.Error=e})}function i(e){return t.post("/api/projects/",e).success(function(e){r.RemoveLast(),o.path("/"+e.Id)}).error(function(e){a.Error=e})}function s(){return t.post("/api/projects/",a.SelectedProject).success(function(){r.RemoveLast(),o.path("/"+a.SelectedProject.Id)}).error(function(e){a.Error=e})}var a=this;a.Projects=[],a.Error=void 0,a.SelectedProject=void 0,a.GetProjects=n,a.GetProjectDetails=c,a.AddProject=i,a.UpdateProject=s}e.module("Projects").service("ProjectsService",t),t.$inject=["$http","$location","BreadcrumbService"]}(angular),function(e){"use strict";function t(){function e(e,t,o){(o.ngClick||""===o.href||"#"===o.href)&&t.on("click",function(e){e.preventDefault()})}return{restrict:"E",link:e}}e.module("Common").directive("a",t)}(angular),function(e){"use strict";function t(){var e=this;e.Title=""}e.module("Common").value("PageHeadService",new t)}(angular),function(e){"use strict";function t(){function t(){c.AboutMenu.Class="",c.SettingsMenu.Class=""}function r(t){t.get("/api/PluginPaths").success(function(t){c.Tools=e.fromJson(t)})}function n(t){t.get("/api/User").success(function(t){c.User=e.fromJson(t)})}var c=this;c.AboutMenu=new o("/About","About"),c.SettingsMenu=new o("/Settings","Settings"),c.Tools=void 0,c.User=void 0,c.DeactivateAll=t,c.LoadTools=r,c.LoadUser=n}function o(e,t){function o(){r.IsActive=!0,r.Class="active"}var r=this;r.IsActive=!1,r.Class="",r.Path=e,r.Text=t,r.SetAsActive=o}e.module("Common").value("NavbarService",new t)}(angular),function(e){"use strict";function t(){function e(){c.RootItem=void 0,c.IsVisible=!1}function t(){var e=[];return c.RootItem&&c.RootItem.AddTo(e),e}function r(e,t){c.IsVisible=!0,c.RootItem?(c.RootItem.Class="",c.RootItem.SetNextWith(e,t)):(c.RootItem=new o(e,t),c.RootItem.Class="active")}function n(){c.RootItem&&(c.RootItem.IsLast()?c.Reset():c.RootItem.RemoveLast())}var c=this;c.RootItem=void 0,c.IsVisible=!1,c.Reset=e,c.GetItems=t,c.AddNew=r,c.RemoveLast=n}function o(e,t){function r(e,t){s.Next?e?(s.Next.Class="",s.Next.SetNextWith(e,t)):s.Next.Next||(s.Class="active",s.Next=void 0):(s.Next=new o(e,t),s.Next.Class="active")}function n(e){e.push(s),s.Next&&s.Next.AddTo(e)}function c(){return!s.Next}function i(){s.Next&&(s.Next.IsLast()?(s.Class="active",s.Next=void 0):s.Next.RemoveLast())}var s=this;s.Location=e.path(),s.Text=t,s.Next=void 0,s.Class="",s.SetNextWith=r,s.AddTo=n,s.IsLast=c,s.RemoveLast=i}e.module("Common").value("BreadcrumbService",new t)}(angular),function(e){"use strict";function t(t,o,r){function n(){return t.get("/api/settings").success(function(t){s.Settings=e.fromJson(t)}).error(function(e){s.Error=e})}function c(){return t.post("/api/settings",s.Settings).success(function(){r.UpdateTools(t),o.path("/")}).error(function(e){s.Error=e})}function i(e){var t=s.Settings.indexOf(e);-1!=t&&s.Settings.splice(t,1)}var s=this;s.Settings=[],s.Error=void 0,s.GetSettings=n,s.UpdateSettings=c,s.DeleteSettings=i}e.module("Common").service("SettingsService",t),t.$inject=["$http","$location","NavbarService"]}(angular),function(e){"use strict";function t(e){function t(){e.get("/api/SimonVersion/").success(function(e){o.Version=e.DisplayText})}var o=this;o.Version="",o.GetVersion=t}e.module("Common").service("FooterService",t),t.$inject=["$http"]}(angular),function(e){"use strict";function t(e){var t=this;t.PageHeadService=e}e.module("Common").controller("PageHead",t),t.$inject=["PageHeadService"]}(angular),function(e){"use strict";function t(e,t){function o(){t.LoadTools(e),t.LoadUser(e)}var r=this;r.NavbarService=t,o()}e.module("Common").controller("Navbar",t),t.$inject=["$http","NavbarService"]}(angular),function(e){"use strict";function t(e){var t=this;t.BreadcrumbService=e}e.module("Common").controller("Breadcrumb",t),t.$inject=["BreadcrumbService"]}(angular),function(e){"use strict";function t(e,t,o,r,n){function c(){try{t.Title="Global settings",o.IsVisible=!1,r.DeactivateAll(),r.SettingsMenu.SetAsActive(),n.GetSettings()}catch(e){console.log(e)}}var i=this;i.PageHeadService=t,i.BreadcrumbService=o,i.NavbarService=r,i.SettingsService=n,c()}e.module("Common").controller("Settings",t),t.$inject=["$location","PageHeadService","BreadcrumbService","NavbarService","SettingsService"]}(angular),function(e){"use strict";function t(e,t,o,r){function n(){t.Title="About",o.IsVisible=!1,r.DeactivateAll(),r.AboutMenu.SetAsActive()}var c=this;c.PageHeadService=t,c.BreadcrumbService=o,c.NavbarService=r,n()}try{e.module("Common").controller("About",t),t.$inject=["$location","PageHeadService","BreadcrumbService","NavbarService"]}catch(o){console.log(err)}t.$inject=["$location","pageHeadService","breadcrumbService","navbarService"]}(angular),function(e){"use strict";function t(e){function t(){e.GetVersion()}var o=this;o.FooterService=e,t()}e.module("Common").controller("Footer",t),t.$inject=["FooterService"]}(angular);
//# sourceMappingURL=data:application/json;base64,