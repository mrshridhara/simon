!function(){"use strict";angular.module("simon",["ngAnimate","ngRoute","CommonModule","ProjectsModule","ApplicationsModule"])}(),function(){"use strict";function e(e){e.otherwise({redirectTo:"/"})}angular.module("simon").config(e),e.$inject=["$routeProvider"]}(),function(){function e(e){e.when("/About",{templateUrl:"Modules/00_Common/03_Templates/About.html",controller:"AboutController",controllerAs:"vm"}).when("/Settings",{templateUrl:"Modules/00_Common/03_Templates/Settings.html",controller:"SettingsController",controllerAs:"vm"})}angular.module("CommonModule",["ngRoute"]).config(e),e.$inject=["$routeProvider"]}();var projectsModule=angular.module("ProjectsModule",["ngRoute","CommonModule"]);projectsModule.config(["$routeProvider",function(e){e.when("/",{templateUrl:"Modules/01_Projects/03_Templates/Projects.html",controller:"ProjectsController"}).when("/new-project",{templateUrl:"Modules/01_Projects/03_Templates/NewProject.html",controller:"NewProjectController"}).when("/:ProjectId",{templateUrl:"Modules/01_Projects/03_Templates/ProjectDetails.html",controller:"ProjectDetailsController"}).when("/:ProjectId/edit",{templateUrl:"Modules/01_Projects/03_Templates/EditProject.html",controller:"EditProjectController"})}]);var applicationsModule=angular.module("ApplicationsModule",["ngRoute","CommonModule","ProjectsModule"]);applicationsModule.config(["$routeProvider",function(){}]),function(){function e(){function e(e,t,o){(o.ngClick||""===o.href||"#"===o.href)&&t.on("click",function(e){e.preventDefault()})}return{restrict:"E",link:e}}angular.module("CommonModule").directive("a",e)}();var PageHeadServices=function(e){this.Tile="",this.Date=e};!function(){var e=new Date,t=e.getDate()+"/"+(e.getMonth()+1)+"/"+e.getFullYear()+" @ "+e.getHours()+":"+e.getMinutes()+":"+e.getSeconds(),o=new PageHeadServices(t);commonModule.value("PageHeadServices",o)}();var NavbarServices=function(e){var t=this;this.AboutMenu=new NavbarMenu("/About"),this.SettingsMenu=new NavbarMenu("/Settings"),this.Tools=e,this.DeactivateAll=function(){t.AboutMenu.Class="",t.SettingsMenu.Class=""},this.UpdateTools=function(e){e.get("/api/PluginPaths").success(function(e){t.Tools=angular.fromJson(e)})}},NavbarMenu=function(e){var t=this;this.IsActive=!1,this.Class="",this.Path=e,this.SetAsActive=function(){t.IsActive=!0,t.Class="active"}};!function(){var e=new NavbarServices;commonModule.value("NavbarServices",e)}();var BreadcrumbItem=function(e,t,o){var r=this;this.Location=e.path(),this.Text=t,this.Next=o,this.Class="",this.SetNextWith=function(e,t){r.Next?e?(r.Next.Class="",r.Next.SetNextWith(e,t)):r.Next.Next||(r.Class="active",r.Next=o):(r.Next=new BreadcrumbItem(e,t),r.Next.Class="active")},this.AddTo=function(e){e.push(r),r.Next&&r.Next.AddTo(e)},this.IsLast=function(){return!r.Next},this.RemoveLast=function(){this.Next&&(r.Next.IsLast()?(r.Class="active",r.Next=o):r.Next.RemoveLast())}},BreadcrumbServices=function(e){var t=this;this.RootItem=e,this.IsVisible=!1,this.Reset=function(){t.RootItem=e,t.IsVisible=!1},this.GetItems=function(){var e=new Array;return t.RootItem&&t.RootItem.AddTo(e),e},this.AddNew=function(e,o){t.IsVisible=!0,this.RootItem?(t.RootItem.Class="",t.RootItem.SetNextWith(e,o)):(t.RootItem=new BreadcrumbItem(e,o),t.RootItem.Class="active")},this.RemoveLast=function(){this.RootItem&&(t.RootItem.IsLast()?t.Reset():t.RootItem.RemoveLast())}};!function(){var e=new BreadcrumbServices;commonModule.value("BreadcrumbServices",e)}();var SettingsServices=function(e,t,o,r){var s=this;this.Settings=[],this.Error=r,this.GetSettings=function(){return e.get("/api/settings").success(function(e){s.Settings=angular.fromJson(e)}).error(function(e){s.Error=e})},this.UpdateSettings=function(){return e.post("/api/settings",this.Settings).success(function(){o.UpdateTools(e),t.path("/")}).error(function(e){s.Error=e})},this.DeleteSettings=function(e){var t=this.Settings.indexOf(e);-1!=t&&this.Settings.splice(t,1)}};commonModule.service("SettingsServices",["$http","$location","NavbarServices",function(e,t,o){return new SettingsServices(e,t,o)}]);var FooterServices=function(e){var t=this;this.Version="",this.GetVersion=function(){e.get("/api/SimonVersion/").success(function(e){t.Version=e.DisplayText})}};commonModule.service("FooterServices",["$http",function(e){return new FooterServices(e)}]),function(){function e(e){var t=this;t.PageHeadServices=e}angular.module("CommonModule").controller("PageHeadController",e),e.$inject=["PageHeadServices"]}(),commonModule.controller("NavbarController",["$scope","$http","NavbarServices",function(e,t,o){o.UpdateTools(t),e.NavbarServices=o}]),commonModule.controller("BreadcrumbController",["$scope","BreadcrumbServices",function(e,t){e.BreadcrumbServices=t}]),commonModule.controller("SettingsController",["$scope","$location","NavbarServices","BreadcrumbServices","PageHeadServices","SettingsServices",function(e,t,o,r,s,i){o.DeactivateAll(),o.SettingsMenu.SetAsActive(),s.Title="Global settings",r.IsVisible=!1,i.GetSettings(),e.SettingsServices=i}]),commonModule.controller("AboutController",["$scope","$location","NavbarServices","BreadcrumbServices","PageHeadServices",function(e,t,o,r,s){o.DeactivateAll(),o.AboutMenu.SetAsActive(),r.IsVisible=!1,s.Title="About"}]),commonModule.controller("FooterController",["$scope","FooterServices",function(e,t){t.GetVersion(),e.FooterServices=t}]);var ProjectsServices=function(e,t,o,r){var s=this;this.Projects=[],this.Error=r,this.SelectedProject=r,this.GetProjects=function(){return e.get("/api/projects").success(function(e){s.Projects=angular.fromJson(e)}).error(function(e){s.Error=e})},this.GetProjectDetails=function(t){return e.get("/api/projects/"+t).success(function(e){s.SelectedProject=angular.fromJson(e)}).error(function(e){s.Error=e})},this.AddProject=function(r){return e.post("/api/projects/",r).success(function(e){o.RemoveLast(),t.path("/"+e.Id)}).error(function(e){s.Error=e})},this.UpdateProject=function(){return e.post("/api/projects/",s.SelectedProject).success(function(){o.RemoveLast(),t.path("/"+s.SelectedProject.Id)}).error(function(e){s.Error=e})}};projectsModule.service("ProjectsServices",["$http","$location","BreadcrumbServices",function(e,t,o){return new ProjectsServices(e,t,o)}]),projectsModule.controller("ProjectsController",["$scope","$location","PageHeadServices","NavbarServices","BreadcrumbServices","ProjectsServices",function(e,t,o,r,s,i){r.DeactivateAll(),o.Title="Home",i.GetProjects().success(function(){s.Reset(),s.AddNew(t,o.Title)}),e.ProjectsServices=i}]),projectsModule.controller("NewProjectController",["$scope","$location","$routeParams","PageHeadServices","NavbarServices","BreadcrumbServices","ProjectsServices",function(e,t,o,r,s,i,c){s.DeactivateAll(),r.Title="Add New Project",i.AddNew(t,r.Title),e.ProjectsServices=c,e.NewProjectDetails={Name:"",Description:""}}]),projectsModule.controller("ProjectDetailsController",["$scope","$location","$routeParams","PageHeadServices","NavbarServices","BreadcrumbServices","ProjectsServices",function(e,t,o,r,s,i,c){s.DeactivateAll(),c.GetProjectDetails(o.ProjectId).success(function(){r.Title=c.SelectedProject.Name,i.AddNew(t,r.Title)}),e.ProjectsServices=c}]),projectsModule.controller("EditProjectController",["$scope","$location","$routeParams","PageHeadServices","NavbarServices","BreadcrumbServices","ProjectsServices",function(e,t,o,r,s,i,c){s.DeactivateAll(),c.GetProjectDetails(o.ProjectId).success(function(){r.Title="Edit "+c.SelectedProject.Name,i.RemoveLast(),i.AddNew(t,r.Title)}),e.ProjectsServices=c}]);
//# sourceMappingURL=data:application/json;base64,