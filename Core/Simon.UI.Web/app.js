!function(e){"use strict";e.module("Simon",["ngRoute","Common","Projects","Applications"])}(angular),function(e){"use strict";function t(e){e.otherwise({redirectTo:"/"})}e.module("Simon").config(t),t.$inject=["$routeProvider"]}(angular),function(e){"use strict";e.module("Common",["ngRoute"])}(angular),function(e){"use strict";function t(e){e.when("/About",{templateUrl:"App/00_Common/03_Templates/About.html",controller:"About",controllerAs:"vm"}).when("/Settings",{templateUrl:"App/00_Common/03_Templates/Settings.html",controller:"Settings",controllerAs:"vm"})}e.module("Common").config(t),t.$inject=["$routeProvider"]}(angular),function(e){"use strict";e.module("Projects",["ngRoute","Common"])}(angular),function(e){"use strict";function t(e){e.when("/",{templateUrl:"App/01_Projects/03_Templates/Projects.html",controller:"Projects",controllerAs:"vm"}).when("/new-project",{templateUrl:"App/01_Projects/03_Templates/NewProject.html",controller:"NewProject",controllerAs:"vm"}).when("/:ProjectId",{templateUrl:"App/01_Projects/03_Templates/ProjectDetails.html",controller:"ProjectDetails",controllerAs:"vm"}).when("/:ProjectId/edit",{templateUrl:"App/01_Projects/03_Templates/EditProject.html",controller:"EditProject",controllerAs:"vm"})}e.module("Projects").config(t),t.$inject=["$routeProvider"]}(angular),function(e){"use strict";e.module("Applications",["ngRoute","Common","Projects"])}(angular),function(e){"use strict";function t(e){e.when("/:ProjectId/new-application",{templateUrl:"App/02_Applications/03_Templates/NewApplication.html",controller:"NewApplication",controllerAs:"vm"}).when("/:ProjectId/:ApplicationId",{templateUrl:"App/02_Applications/03_Templates/ApplicationDetails.html",controller:"ApplicationDetails",controllerAs:"vm"}).when("/:ProjectId/:ApplicationId/edit",{templateUrl:"App/02_Applications/03_Templates/EditApplication.html",controller:"EditApplication",controllerAs:"vm"})}e.module("Applications").config(t),t.$inject=["$routeProvider"]}(angular),function(e){"use strict";function t(){function e(e,t,o){(o.ngClick||""===o.href||"#"===o.href)&&t.on("click",function(e){e.preventDefault()})}return{restrict:"E",link:e}}e.module("Common").directive("a",t)}(angular),function(e){"use strict";function t(){var e=this;e.Title=""}e.module("Common").value("PageHeadService",new t)}(angular),function(e){"use strict";function t(){function t(){r.AboutMenu.Class="",r.SettingsMenu.Class=""}function n(t){t.get("/api/PluginPaths").success(function(t){r.Tools=e.fromJson(t)})}function i(t){t.get("/api/User").success(function(t){r.User=e.fromJson(t)})}var r=this;r.AboutMenu=new o("/About","About"),r.SettingsMenu=new o("/Settings","Settings"),r.Tools=void 0,r.User=void 0,r.DeactivateAll=t,r.LoadTools=n,r.LoadUser=i}function o(e,t){function o(){n.IsActive=!0,n.Class="active"}var n=this;n.IsActive=!1,n.Class="",n.Path=e,n.Text=t,n.SetAsActive=o}e.module("Common").value("NavbarService",new t)}(angular),function(e){"use strict";function t(){function e(){c.RootItem=void 0,c.IsVisible=!1}function t(){var e=[];return c.RootItem&&c.RootItem.AddTo(e),e}function n(e,t){c.IsVisible=!0,c.RootItem?(c.RootItem.Class="",c.RootItem.SetNextWith(e,t)):(c.RootItem=new o(e,t),c.RootItem.Class="active")}function i(){c.RootItem&&(c.RootItem.IsLast()?c.Reset():c.RootItem.RemoveLast())}function r(e){return c.RootItem?c.RootItem.LastContains(e):void 0}var c=this;c.RootItem=void 0,c.IsVisible=!1,c.Reset=e,c.GetItems=t,c.AddNew=n,c.RemoveLast=i,c.LastContains=r}function o(e,t){function n(e,t){a.Next?e?(a.Next.Class="",a.Next.SetNextWith(e,t)):a.Next.Next||(a.Class="active",a.Next=void 0):(a.Next=new o(e,t),a.Next.Class="active")}function i(e){e.push(a),a.Next&&a.Next.AddTo(e)}function r(){return!a.Next}function c(){a.Next&&(a.Next.IsLast()?(a.Class="active",a.Next=void 0):a.Next.RemoveLast())}function s(e){return a.IsLast()?a.Text.indexOf(e)>-1:a.Next.LastContains(e)}var a=this;a.Location=e.path(),a.Text=t,a.Next=void 0,a.Class="",a.SetNextWith=n,a.AddTo=i,a.IsLast=r,a.RemoveLast=c,a.LastContains=s}e.module("Common").value("BreadcrumbService",new t)}(angular),function(e){"use strict";function t(t,o,n){function i(){return t.get("/api/Settings").success(function(t){s.Settings=e.fromJson(t),e.forEach(s.Settings,function(e){e.Value.PluginName&&null!==e.Value.PluginName||(s.NonPluginSettings||(onePlugin.Settings=[]),s.NonPluginSettings.push(e))})}).error(function(e){s.Error=e})}function r(){return t.post("/api/Settings",s.Settings).success(function(){n.UpdateTools(t),o.path("/")}).error(function(e){s.Error=e})}function c(e){var t=s.Settings.indexOf(e);-1!=t&&s.Settings.splice(t,1)}var s=this;s.Settings=[],s.GetSettings=i,s.UpdateSettings=r,s.DeleteSettings=c}e.module("Common").service("SettingsService",t),t.$inject=["$http","$location","NavbarService"]}(angular),function(e){"use strict";function t(e){function t(){e.get("/api/SimonVersion/").success(function(e){o.Version=e.DisplayText})}var o=this;o.Version="",o.GetVersion=t}e.module("Common").service("SimonVersionService",t),t.$inject=["$http"]}(angular),function(e){"use strict";function t(t){function o(){return t.get("/api/Plugins").success(function(t){i.Plugins=e.fromJson(t)})}function n(t){e.forEach(i.Plugins,function(e){if(e.Settings){var o=e.Settings.indexOf(t);-1!=o&&e.Settings.splice(o,1)}})}var i=this;i.Plugins=void 0,i.GetPlugins=o,i.DeleteSettings=n}e.module("Common").service("PluginsService",t),t.$inject=["$http"]}(angular),function(e){"use strict";function t(e){var t=this;t.PageHeadService=e}e.module("Common").controller("PageHead",t),t.$inject=["PageHeadService"]}(angular),function(e){"use strict";function t(e,t,o){function n(){t.LoadTools(e),t.LoadUser(e),o.GetVersion()}var i=this;i.NavbarService=t,i.SimonVersionService=o,n()}e.module("Common").controller("Navbar",t),t.$inject=["$http","NavbarService","SimonVersionService"]}(angular),function(e){"use strict";function t(e){var t=this;t.BreadcrumbService=e}e.module("Common").controller("Breadcrumb",t),t.$inject=["BreadcrumbService"]}(angular),function(e){"use strict";function t(t,o,n,i,r,c){function s(){try{o.Title="Global settings",n.IsVisible=!1,i.DeactivateAll(),i.SettingsMenu.SetAsActive(),r.GetSettings().success(function(){u()}).error(function(e){l.Error=e})}catch(e){console.log(e)}}function a(e){r.DeleteSettings(e),c.DeleteSettings(e)}function u(){c.GetPlugins().error(function(e){l.Error=e}).success(function(){e.forEach(c.Plugins,function(t){e.forEach(r.Settings,function(e){t.Name===e.Value.PluginName&&(t.Settings||(t.Settings=[]),t.Settings.push(e))})})})}var l=this;l.Error=void 0,l.PageHeadService=o,l.BreadcrumbService=n,l.NavbarService=i,l.SettingsService=r,l.PluginsService=c,l.DeleteSettings=a,s()}e.module("Common").controller("Settings",t),t.$inject=["$location","PageHeadService","BreadcrumbService","NavbarService","SettingsService","PluginsService"]}(angular),function(e){"use strict";function t(e,t,o,n){function i(){t.Title="About",o.IsVisible=!1,n.DeactivateAll(),n.AboutMenu.SetAsActive()}var r=this;r.PageHeadService=t,r.BreadcrumbService=o,r.NavbarService=n,i()}e.module("Common").controller("About",t),t.$inject=["$location","PageHeadService","BreadcrumbService","NavbarService"]}(angular),function(e){"use strict";function t(){function e(){}e()}e.module("Common").controller("Footer",t)}(angular),function(e){"use strict";function t(t,o,n){function i(){return t.get("/api/projects").success(function(t){a.Projects=e.fromJson(t)}).error(function(e){a.Error=e})}function r(o){return t.get("/api/projects/"+o).success(function(t){a.SelectedProject=e.fromJson(t)}).error(function(e){a.Error=e})}function c(e){return t.post("/api/projects/",e).success(function(e){n.RemoveLast(),o.path("/"+e.Id)}).error(function(e){a.Error=e})}function s(){return t.post("/api/projects/",a.SelectedProject).success(function(){n.RemoveLast(),o.path("/"+a.SelectedProject.Id)}).error(function(e){a.Error=e})}var a=this;a.Projects=[],a.Error=void 0,a.SelectedProject=void 0,a.GetProjects=i,a.GetProjectDetails=r,a.AddProject=c,a.UpdateProject=s}e.module("Projects").service("ProjectsService",t),t.$inject=["$http","$location","BreadcrumbService"]}(angular),function(e){"use strict";function t(e,t,o,n,i){function r(){t.Title="Home",o.DeactivateAll(),i.GetProjects().success(function(){n.Reset(),n.AddNew(e,t.Title)})}var c=this;c.ProjectsService=i,r()}e.module("Projects").controller("Projects",t),t.$inject=["$location","PageHeadService","NavbarService","BreadcrumbService","ProjectsService"]}(angular),function(e){"use strict";function t(e,t,o,n,i,r){function c(){o.Title="Add New Project",n.DeactivateAll(),i.AddNew(e,o.Title)}var s=this;s.ProjectsService=r,s.NewProjectDetails={Name:"",Description:""},c()}e.module("Projects").controller("NewProject",t),t.$inject=["$location","$routeParams","PageHeadService","NavbarService","BreadcrumbService","ProjectsService"]}(angular),function(e){"use strict";function t(e,t,o,n,i,r){function c(){n.DeactivateAll(),r.GetProjectDetails(t.ProjectId).success(function(){o.Title=r.SelectedProject.Name,i.LastContains("Edit ")&&i.RemoveLast(),i.AddNew(e,o.Title)})}var s=this;s.ProjectsService=r,c()}e.module("Projects").controller("ProjectDetails",t),t.$inject=["$location","$routeParams","PageHeadService","NavbarService","BreadcrumbService","ProjectsService"]}(angular),function(e){"use strict";function t(e,t,o,n,i,r){function c(){n.DeactivateAll(),r.GetProjectDetails(t.ProjectId).success(function(){o.Title="Edit "+r.SelectedProject.Name,i.RemoveLast(),i.AddNew(e,o.Title)})}var s=this;s.ProjectsService=r,c()}e.module("Projects").controller("EditProject",t),t.$inject=["$location","$routeParams","PageHeadService","NavbarService","BreadcrumbService","ProjectsService"]}(angular),function(e){"use strict";function t(t,o,n){function i(o,n){return t.get("/api/applications?projectId="+o+"&applicationId="+n).success(function(t){s.SelectedApplication=e.fromJson(t)}).error(function(e){s.Error=e})}function r(e,i){return t.post("/api/applications?projectId="+e,i).success(function(e){n.RemoveLast(),o.path("/"+e.Id)}).error(function(e){s.Error=e})}function c(e){return t.post("/api/applications?projectId="+e,s.SelectedApplication).success(function(){n.RemoveLast(),o.path("/"+s.SelectedApplication.Id)}).error(function(e){s.Error=e})}var s=this;s.Applications=[],s.Error=void 0,s.SelectedApplication=void 0,s.GetApplicationDetails=i,s.AddApplication=r,s.UpdateApplication=c}e.module("Applications").service("ApplicationsService",t),t.$inject=["$http","$location","BreadcrumbService"]}(angular),function(e){"use strict";function t(e,t,o,n,i,r){function c(){o.Title="Add New Application",n.DeactivateAll(),i.AddNew(e,o.Title)}var s=this;s.ApplicationsService=r,s.NewApplicationDetails={Name:"",Description:""},c()}e.module("Applications").controller("NewApplication",t),t.$inject=["$location","$routeParams","PageHeadService","NavbarService","BreadcrumbService","ApplicationsService"]}(angular),function(e){"use strict";function t(){}e.module("Applications").controller("ApplicationDetails",t),t.$inject=["$location","$routeParams","PageHeadService","NavbarService","BreadcrumbService","ApplicationsService"]}(angular),function(e){"use strict";function t(){}e.module("Applications").controller("EditApplication",t),t.$inject=["$location","$routeParams","PageHeadService","NavbarService","BreadcrumbService","ApplicationsService"]}(angular);
//# sourceMappingURL=data:application/json;base64,